###############################################################################
##################################################### Xiaomi Vacuum Robot #####
###############################################################################
homeassistant:
  customize:
    package.node_anchors:
      customize: &customize
        package: 'Xiaomi Vacuum Package'
        version: 'v4.5'
        author: 'Calas'

      expose: &expose
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

  ################################################
  ## input_boolean Customize
  ################################################
    input_boolean.pulizia_giornaliera_robot:
      <<: *customize
    input_boolean.pulizia_lunedi:
      icon: mdi:broom
      <<: *customize
    input_boolean.pulizia_martedi:
      icon: mdi:broom
      <<: *customize
    input_boolean.pulizia_mercoledi:
      icon: mdi:broom
      <<: *customize
    input_boolean.pulizia_giovedi:
      icon: mdi:broom
      <<: *customize
    input_boolean.pulizia_venerdi:
      icon: mdi:broom
      <<: *customize
    input_boolean.pulizia_sabato:
      icon: mdi:broom
      <<: *customize
    input_boolean.pulizia_domenica:
      icon: mdi:broom
      <<: *customize
    input_boolean.pulizia_se_in_casa:
      <<: *customize
    input_boolean.vacuum_svuota_serbatoio:
      <<: *customize
    input_boolean.richiesta_pulizia:
      <<: *customize
    input_boolean.richiesta_pulizia_lunedi:
      <<: *customize
    input_boolean.richiesta_pulizia_martedi:
      <<: *customize
    input_boolean.richiesta_pulizia_mercoledi:
      <<: *customize
    input_boolean.richiesta_pulizia_giovedi:
      <<: *customize
    input_boolean.richiesta_pulizia_venerdi:
      <<: *customize
    input_boolean.richiesta_pulizia_sabato:
      <<: *customize
    input_boolean.richiesta_pulizia_domenica:
      <<: *customize
    input_boolean.pulizia_eseguita:
      <<: *customize
    input_boolean.notifica_richiesta_pulizia:
      <<: *customize
    input_boolean.allert_richiesta_pulizia:
      <<: *customize
    input_boolean.richiesta_pulizia_lunedi_2:
      <<: *customize
    input_boolean.richiesta_pulizia_martedi_2:
      <<: *customize
    input_boolean.richiesta_pulizia_mercoledi_2:
      <<: *customize
    input_boolean.richiesta_pulizia_giovedi_2:
      <<: *customize
    input_boolean.richiesta_pulizia_venerdi_2:
      <<: *customize
    input_boolean.richiesta_pulizia_sabato_2:
      <<: *customize
    input_boolean.richiesta_pulizia_domenica_2:
      <<: *customize
    input_boolean.pulizia_automatica_bagno:
      <<: *customize
    input_boolean.annuncio_inizio_pulizie:
      <<: *customize
    input_boolean.annuncio_pulizie:
      <<: *customize
    input_boolean.pulizie_alexa:
      <<: *customize
    input_boolean.vacuum_pulizie_avviate:
      <<: *customize

  ################################################
  ## Script Customize
  ################################################
    scritp.robot_avvia_pulizie:
      <<: *customize
    scritp.robot_torna_a_casa:
      <<: *customize
    scritp.vacuum_start:
      <<: *customize
    scritp.vacuum_stop:
      <<: *customize
    scritp.vacuum_alexa:
      <<: *customize
    scritp.avviso_serbatoio_alexa:
      <<: *customize
    scritp.pulizia_bagno_gatti:
      <<: *customize
    scritp.script.robot_avvia_pulizie:
      icon: mdi:broom
      <<: *customize




#******************************************************************************#
#                                   C O R P O                                  #
#******************************************************************************#

################################################################################
##                  Integrazione
###################################################

vacuum:
  - platform: xiaomi_miio
    host: XXX.XXX.XXX.XXX
    token: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

camera:
  - platform: xiaomi_cloud_map_extractor
    host: XXX.XXX.XXX.XXX
    token: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    username: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    password: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    country: "de"
    name: "Vacuum"
    scan_interval: 10
    colors:
      color_map_outside: [28, 28, 28]
      color_path: [255, 255, 255]
    map_transformation:
      scale: 2
    auto_update: true
    sizes:
      charger_radius: 4
      vacuum_radius: 6.5
    attributes:
      - room_numbers
      - rooms
      - map_name
    draw:
      - charger
      - path
      - goto_path
      - predicted_path
      - no_go_zones
      - no_mopping_zones
      - vacuum_position
      - virtual_walls
      - zones

################################################################################
##                  Counter
###################################################
counter:
  pulizie_giorno:
    name: Pulizie Giono
    icon: mdi:calendar-range
  pulizie_settimana:
    name: Pulizie Giono
    icon: mdi:calendar-week

################################################################################
##                  Input Select
###################################################
input_select:
  scegli_stanza_vacuum:
    name: Pulizie stanze
    options:
      - "Bagno"
      - "Bagno Gatti"
      - "Camera da letto"
      - "Cameretta"
      - "Cucina"
      - "Corridoio"
      - "Soggiorno"
    icon: mdi:target-variant


################################################################################
##                  Input Datetime
###################################################
input_datetime:
  orario_pulizia_lunedi:
    name: Orario di pulizia Lunedi
    has_date: false
    has_time: true
  orario_pulizia_martedi:
    name: Orario di pulizia Martedi
    has_date: false
    has_time: true
  orario_pulizia_mercoledi:
    name: Orario di pulizia Mercoledi
    has_date: false
    has_time: true
  orario_pulizia_giovedi:
    name: Orario di pulizia Giovedi
    has_date: false
    has_time: true
  orario_pulizia_venerdi:
    name: Orario di pulizia Vennerdi
    has_date: false
    has_time: true
  orario_pulizia_sabato:
    name: Orario di pulizia Sabato
    has_date: false
    has_time: true
  orario_pulizia_domenica:
    name: Orario di pulizia Domenica
    has_date: false
    has_time: true

  orario_richiesta_pulizia_lunedi:
    name: Orario richiesta pulizia Lunedi
    has_date: false
    has_time: true
  orario_richiesta_pulizia_martedi:
    name: Orario richiesta pulizia Martedi
    has_date: false
    has_time: true
  orario_richiesta_pulizia_mercoledi:
    name: Orario richiesta pulizia Mercoledi
    has_date: false
    has_time: true
  orario_richiesta_pulizia_giovedi:
    name: Orario di pulizia Giovedi
    has_date: false
    has_time: true
  orario_richiesta_pulizia_venerdi:
    name: Orario richiesta pulizia Vennerdi
    has_date: false
    has_time: true
  orario_richiesta_pulizia_sabato:
    name: Orario richiesta pulizia Sabato
    has_date: false
    has_time: true
  orario_richiesta_pulizia_domenica:
    name: Orario richiesta pulizia Domenica
    has_date: false
    has_time: true

  orario_richiesta_pulizia_lunedi_2:
    name: Orario richiesta pulizia Lunedi 2
    has_date: false
    has_time: true
  orario_richiesta_pulizia_martedi_2:
    name: Orario richiesta pulizia Martedi 2
    has_date: false
    has_time: true
  orario_richiesta_pulizia_mercoledi_2:
    name: Orario richiesta pulizia Mercoledi 2
    has_date: false
    has_time: true
  orario_richiesta_pulizia_giovedi_2:
    name: Orario di pulizia Giovedi 2
    has_date: false
    has_time: true
  orario_richiesta_pulizia_venerdi_2:
    name: Orario richiesta pulizia Vennerdi 2
    has_date: false
    has_time: true
  orario_richiesta_pulizia_sabato_2:
    name: Orario richiesta pulizia Sabato 2
    has_date: false
    has_time: true
  orario_richiesta_pulizia_domenica_2:
    name: Orario richiesta pulizia Domenica
    has_date: false
    has_time: true

################################################################################
##                  Input Boolean
###################################################
input_boolean:
  pulizia_giornaliera_robot:
    name: Pulizia giornaliera robot
    icon: mdi:repeat
  pulizia_se_in_casa:
    name: Attiva puliza SOLO se qualcuno è in casa
  vacuum_svuota_serbatoio:
    name: Svuota Serbatoio

  pulizia_lunedi:
    name: Pulizia di Lunedì
  pulizia_martedi:
    name: Pulizia di Martedì
  pulizia_mercoledi:
    name: Pulizia di Mercoledì
  pulizia_giovedi:
    name: Pulizia di Giovedì
  pulizia_venerdi:
    name: Pulizia di Venerdì
  pulizia_sabato:
    name: Pulizia di Sabato
  pulizia_domenica:
    name: Pulizia di Domenica

  richiesta_pulizia:
    name: Richiesta pulizie
    icon: mdi:calendar-question
  richiesta_pulizia_lunedi:
    name: Richiesta pulizia di Lunedì
    icon: mdi:spray-bottle
  richiesta_pulizia_martedi:
    name: Richiesta pulizia di Martedì
    icon: mdi:spray-bottle
  richiesta_pulizia_mercoledi:
    name: Richiesta pulizia di Mercoledì
    icon: mdi:spray-bottle
  richiesta_pulizia_giovedi:
    name: Richiesta pulizia di Giovedì
    icon: mdi:spray-bottle
  richiesta_pulizia_venerdi:
    name: Richiesta pulizia di Venerdì
    icon: mdi:spray-bottle
  richiesta_pulizia_sabato:
    name: Richiesta pulizia di Sabato
    icon: mdi:spray-bottle
  richiesta_pulizia_domenica:
    name: Richiesta pulizia di Domenica
    icon: mdi:spray-bottle

  pulizia_eseguita:
    name: Pulizia Esegutia
  notifica_richiesta_pulizia:
    name: Notifica Richiesta Pulizie
  allert_richiesta_pulizia:
    name: Allert Richiesta Puliza

  richiesta_pulizia_lunedi_2:
    name: Richiesta pulizia di Lunedì 2
    icon: mdi:spray-bottle
  richiesta_pulizia_martedi_2:
    name: Richiesta pulizia di Martedì 2
    icon: mdi:spray-bottle
  richiesta_pulizia_mercoledi_2:
    name: Richiesta pulizia di Mercoledì 2
    icon: mdi:spray-bottle
  richiesta_pulizia_giovedi_2:
    name: Richiesta pulizia di Giovedì 2
    icon: mdi:spray-bottle
  richiesta_pulizia_venerdi_2:
    name: Richiesta pulizia di Venerdì 2
    icon: mdi:spray-bottle
  richiesta_pulizia_sabato_2:
    name: Richiesta pulizia di Sabato 2
    icon: mdi:spray-bottle
  richiesta_pulizia_domenica_2:
    name: Richiesta pulizia di Domenica 2
    icon: mdi:spray-bottle

  pulizia_automatica_bagno:
    name: Pulizia Automatica bagno
    icon: mdi:broom
  annuncio_inizio_pulizie:
    name: Annuncio Inizio Pulizie
    icon: mdi:speaker-wireless
  annuncio_pulizie:
    name: Annuncio Pulizie
  pulizie_alexa:
    name: Pulizie Alexa
  vacuum_pulizie_avviate:
    name: Pulizie Avviate

  stanza_1:
    name: Stanza 1
  stanza_2:
    name: Stanza 2
  stanza_3:
    name: Stanza 3
  stanza_4:
    name: Stanza 4
  stanza_5:
    name: Stanza 5
  stanza_6:
    name: Stanza 6
  stanza_7:
    name: Stanza 7
  stanza_8:
    name: Stanza 8
################################################################################
##                  Sensor
###################################################
sensor:
  platform: template
    sensors:
      last_alexa:
        entity_id:
          - media_player.echo_1
          - media_player.echo_2
        value_template: >
          {{ states.media_player | selectattr('attributes.last_called','eq',True) | map(attribute='entity_id') | first }}
          
  platform: template
  sensors:
    last_alexa:
      friendly_name: 'Last Alexa'
      value_template: >-
        {% if is_state_attr('media_player.echo_show_xxxxxxx','last_called', true) %}
          echo_show_cucina
        {% elif is_state_attr('media_player.echo_dot_xxxxxxx','last_called', true) %}
          soggiorno
        {% elif is_state_attr('media_player.xxxxxxxxxxx','last_called', true) %}
          camera_da_letto
        {% else %}
          none
        {% endif %}

  platform: template
  sensors:
    vacuum_stato:
      friendly_name: Stato robot
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.status }}'
      icon_template: >
        {% set val =  states.vacuum.xiaomi_vacuum_cleaner.attributes.status  %}
        {% if val == 'Charging' %}
          mdi:battery-charging
        {% elif val == 'Cleaning' %}
          mdi:move-resize-variant
        {% elif val == 'Returning home' %}
          mdi:keyboard-return
        {% elif val == 'Idle' %}
          mdi:dots-horizontal
        {% elif val == 'Paused' %}
          mdi:pause-circle
        {% elif val == 'docked' %}
          mdi:pause-circle
        {% else %}
          mdi:battery
        {% endif %}

    sensore_serbatorio_vacuum:
      friendly_name: 'Sensore Serbatoio Vacuum'
      value_template: >-
        {% if states.sensor.coordination_158d0002b615f8.state == 'unknown' %}
            Sconosciuto
        {% elif states.sensor.coordination_158d0002b615f8.state.split(',')[0] | int > 700 %}
            1
        {% elif states.sensor.coordination_158d0002b615f8.state.split(',')[0] | int < -700 %}
            2
        {% elif states.sensor.coordination_158d0002b615f8.state.split(',')[1] | int > 700 %}
            3
        {% elif states.sensor.coordination_158d0002b615f8.state.split(',')[1] | int < -700 %}
            4
        {% elif states.sensor.coordination_158d0002b615f8.state.split(',')[2] | int > 900 %}
            5
        {% elif states.sensor.coordination_158d0002b615f8.state.split(',')[2] | int < -400 %}
            6
        {% endif %}

    pulizia_multi_stanze:
      friendly_name: 'seleziona stanze'
      value_template: >-
          {% set do_stanza_1 = is_state('input_boolean.stanza_1', 'on') %}
          {% set do_stanza_2 = is_state('input_boolean.stanza_2', 'on') %}
          {% set do_stanza_3 = is_state('input_boolean.stanza_3', 'on') %}
          {% set do_stanza_4 = is_state('input_boolean.stanza_4', 'on') %}
          {% set do_stanza_5 = is_state('input_boolean.stanza_5', 'on') %}
          {% set do_stanza_6 = is_state('input_boolean.stanza_6', 'on') %}
          {% set do_stanza_7 = is_state('input_boolean.stanza_7', 'on') %}
          {% set do_stanza_8 = is_state('input_boolean.stanza_8', 'on') %}
          {% set stanza_1 = 16 if do_stanza_1 else '' %}
          {% set stanza_2 = 17 if do_stanza_2 else '' %}
          {% set stanza_3 = 18 if do_stanza_3 else '' %}
          {% set stanza_4 = 19 if do_stanza_4 else '' %}
          {% set stanza_5 = 20 if do_stanza_5 else '' %}
          {% set stanza_6 = 21 if do_stanza_6 else '' %}
          {% set stanza_7 = 22 if do_stanza_7 else '' %}
          {% set stanza_8 = 24 if do_stanza_8 else '' %}

          [{{ [stanza_1, stanza_2, stanza_3, stanza_4, stanza_5, stanza_6, stanza_7, stanza_8] | select("!=", "") | join(",") }}]
#16 lett
#17 ripostiglio
#18 GATTI
#18 BAGNO
#20 Cameretta
#21 Corridoio
#22 salotto+
#24 cucina
    stanze:
      friendly_name: 'seleziona stanze'
      value_template: >-
          {% set object = [states.input_boolean.stanza_1, states.input_boolean.stanza_2, states.input_boolean.stanza_3, states.input_boolean.stanza_4, states.input_boolean.stanza_5, states.input_boolean.stanza_6, states.input_boolean.stanza_7, states.input_boolean.stanza_8] %}
          {{ object | selectattr('state', 'eq', 'on') | list | count >= 1}}

    vacuum_fanspeed:
      friendly_name: Fan Speed
      value_template: 'Mode: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.fan_speed }}'
      icon_template: 'mdi:speedometer'

    vacuum_stato_batteria:
      friendly_name: Batteria robot
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_level }}'
      unit_of_measurement: '%'
      icon_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_icon }}'

    vacuum_tempo_pulizia:
      friendly_name: Tempo ultima pulizia
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaning_time }}'
      icon_template: 'mdi:timer'

    vacuum_area_pulita:
      friendly_name: Area Pulita
      unit_of_measurement: 'm ²'
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaned_area }}'
      icon_template: 'mdi:ruler'

    vacuum_spazzola_centrale:
      friendly_name: Sostituzione Spazzola
      unit_of_measurement: 'h'
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.main_brush_left }}/300'
      icon_template: 'mdi:screwdriver'

    vacuum_spazzolina:
      friendly_name: Sostituzione Spazzolina
      unit_of_measurement: 'h'
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.side_brush_left }}/200'
      icon_template: 'mdi:screwdriver'

    vacuum_filtro:
      friendly_name: Sostituzione Filtro
      unit_of_measurement: 'h'
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.filter_left }}/150'
      icon_template: 'mdi:screwdriver'

    vacuum_sensori:
      friendly_name: Pulizia Sensori
      unit_of_measurement: 'h'
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.sensor_dirty_left }}/30'
      icon_template: 'mdi:screwdriver'

    vacuum_non_disturbare:
      friendly_name: Non disturbare
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.do_not_disturb }}'
      icon_template: >
        {% set val =  states.vacuum.xiaomi_vacuum_cleaner.attributes.do_not_disturb  %}
        {% if val == 'on' %}
          mdi:do-not-disturb
        {% else %}
          mdi:do-not-disturb-off
        {% endif %}

    vacuum_inizio_non_disturbare:
      friendly_name: Inizio non disturbare
      value_template: 'On DND: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.do_not_disturb_start }}'
      icon_template: 'mdi:screwdriver'

    vacuum_fine_non_disturbare:
      friendly_name: Fine non disturbare
      value_template: 'Off DND: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.do_not_disturb_start }}'
      icon_template: 'mdi:screwdriver'

    vacuum_controllo_giornaliero_serbatoio_lunedi:
      friendly_name: Contorllo giornaliero serbatoio lunedi
      value_template: '{{ (states.input_datetime.orario_pulizia_lunedi.attributes.timestamp - (3600) ) }}'

    vacuum_controllo_giornaliero_serbatoio_martedi:
      friendly_name: Contorllo giornaliero serbatoio martedi
      value_template: '{{ (states.input_datetime.orario_pulizia_martedi.attributes.timestamp - (3600) ) }}'

    vacuum_controllo_giornaliero_serbatoio_mercoledi:
      friendly_name: Contorllo giornaliero serbatoio mercoledi
      value_template: '{{ (states.input_datetime.orario_pulizia_mercoledi.attributes.timestamp - (3600) ) }}'

    vacuum_controllo_giornaliero_serbatoio_giovedi:
      friendly_name: Contorllo giornaliero serbatoio giovedi
      value_template: '{{ (states.input_datetime.orario_pulizia_giovedi.attributes.timestamp - (3600) ) }}'

    vacuum_controllo_giornaliero_serbatoio_venerdi:
      friendly_name: Contorllo giornaliero serbatoio venerdi
      value_template: '{{ (states.input_datetime.orario_pulizia_venerdi.attributes.timestamp - (3600) ) }}'

    vacuum_controllo_giornaliero_serbatoio_sabato:
      friendly_name: Contorllo giornaliero serbatoio sabato
      value_template: '{{ (states.input_datetime.orario_pulizia_sabato.attributes.timestamp - (3600) ) }}'

    vacuum_controllo_giornaliero_serbatoio_domenica:
      friendly_name: Contorllo giornaliero serbatoio domenica
      value_template: '{{ (states.input_datetime.orario_pulizia_domenica.attributes.timestamp - (3600) ) }}'

################################################################################
##                  Script
###################################################
script:
  robot_avvia_pulizie:
    alias: "Avvia pulizie"
    sequence:
      - service: vacuum.start
        entity_id: vacuum.xiaomi_vacuum_cleaner

  robot_torna_a_casa:
    alias: "Torna a Casa"
    sequence:
      - service: vacuum.stop
        entity_id: vacuum.xiaomi_vacuum_cleaner
      - delay: '00:00:01'
      - service: vacuum.return_to_base
        entity_id: vacuum.xiaomi_vacuum_cleaner

  vacuum_start:
    sequence:
      - service: vacuum.start
        entity_id: vacuum.xiaomi_vacuum_cleaner

  vacuum_stop:
    sequence:
      - service: vacuum.stop
        entity_id: vacuum.xiaomi_vacuum_cleaner
      - delay: '00:00:01'
      - service: vacuum.return_to_base
        entity_id: vacuum.xiaomi_vacuum_cleaner

  vacuum_alexa:
    sequence:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.pulizie_alexa

  avviso_serbatoio_alexa:
    sequence:
      - service: notify.alexa_media
        data_template:
          target:
            - "media_player.{{ states('sensor.last_alexa') }}"
          data:
            type: tts
            method: speak
          message: "Vorrei, ma ti avviso che il serbatoio di dobby è pieno. Se vuoi che pulisca comunque, dimmi: Alexa, pulisci lo stesso"

  pulizia_bagno_gatti:
    sequence:
      - service: homeassistant.turn_off
        entity_id: automation.notifica_fine_pulizie
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.annuncio_inizio_pulizie
      - service: script.robot_avvia_pulizie
      - delay: '00:02:40'
      - service: script.robot_torna_a_casa
      - delay: '00:05:00'
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.annuncio_inizio_pulizie
      - service: homeassistant.turn_on
        entity_id: automation.notifica_fine_pulizie

  alexa_actions_controllo_serbatoio:
    sequence:
      - service: script.activate_alexa_actionable_notification
        data_template:
          text: 'A quanto pare, il serbatoio di dobbi è pieno. Vuoi che pulisca comunque?'
          event_id: 'actionable_notification_serbatoio'
          alexa_device: "media_player.{{ states('sensor.last_alexa') }}"

  alexa_actions_richiesta_pulizie:
    sequence:
      - service: script.activate_alexa_actionable_notification
        data_template:
          text: 'Scusate, si è fatta ora di pulire. Posso farlo?'
          event_id: 'actionable_notification_richiesta_pulizie'
          alexa_device: "media_player.XXXXXXXX"

  pulizia_stanze:
    sequence:
      - service: xiaomi_miio.vacuum_clean_segment
        data_template:
          entity_id: vacuum.xiaomi_vacuum_cleaner
          segments: '{{states.sensor.pulizia_multi_stanze.state}}'

  pulizia_stanze2:
    sequence:
      - service: vacuum.send_command
        data_template:
          params: "{{ states('sensor.pulizia_multi_stanze') }}"
          command: app_segment_clean
          entity_id: vacuum.xiaomi_vacuum_cleaner


################################################################################
##                  Alert
###################################################
alert:
  richiesta_pulizia:
    name: richiesta pulizia
    entity_id: input_boolean.allert_richiesta_pulizia
    state: 'on'
    repeat: 1
    can_acknowledge: true
    notifiers:
      - notifica_richiesta_pulizie

################################################################################
##                  Automations
###################################################
automation:

###################################################
##                  Ritrono alla base
###################################################
  - alias: Ritorno automatico base se in pausa
    initial_state: true
    trigger:
      - platform: state
        entity_id: vacuum.xiaomi_vacuum_cleaner
        to: "paused"
        for: "00:10:00"
    action:
      - service: script.robot_torna_a_casa

  - alias: Ritorno automatico base se errore
    initial_state: true
    trigger:
      - platform: state
        entity_id: vacuum.xiaomi_vacuum_cleaner
        to: "unknown"
        for: "00:10:00"
    action:
      - service: script.robot_torna_a_casa

###################################################
##                  Pulizie Gatti
###################################################
  - alias: Pulizie automatiche gatti
    initial_state: true
    trigger:
      platform: time_pattern
      hours: "/3"
    condition:
      condition: and
      conditions:
        - condition: time
          after: '10:00:00'
          before: '21:00:00'
        - condition: state
          entity_id: input_boolean.pulizia_automatica_bagno
          state: 'on'
        - condition: state
          entity_id: sensor.vacuum_stato
          state: 'Charging'
    action:
      - service: homeassistant.turn_off
        entity_id: automation.notifica_fine_pulizie
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.annuncio_inizio_pulizie
      - service: script.robot_avvia_pulizie
      - delay: '00:02:40'
      - service: script.robot_torna_a_casa
      - delay: '00:05:00'
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.annuncio_inizio_pulizie
      - service: homeassistant.turn_on
        entity_id: automation.notifica_fine_pulizie

###################################################
##                  Priorita a Pulizie automatiche
###################################################
  - alias: Priorità pulizia automatica Lunedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_lunedi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: time
        weekday:
          - mon
      - condition: state
        entity_id: input_boolean.pulizia_lunedi
        state: 'on'
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.vacuum_stato
            state: 'return_to_base'
          - condition: state
            entity_id: sensor.vacuum_stato
            state: 'cleaning'
    action:
      - service: homeassistant.turn_off
        entity_id: automation.pulizie_automatiche_gatti

  - alias: Priorità pulizia automatica Martedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_martedi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: time
        weekday:
          - tue
      - condition: state
        entity_id: input_boolean.pulizia_martedi
        state: 'on'
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.vacuum_stato
            state: 'return_to_base'
          - condition: state
            entity_id: sensor.vacuum_stato
            state: 'cleaning'
    action:
      - service: homeassistant.turn_off
        entity_id: automation.pulizie_automatiche_gatti

  - alias: Priorità pulizia automatica Mercoledi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_mercoledi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: time
        weekday:
          - wed
      - condition: state
        entity_id: input_boolean.pulizia_mercoledi
        state: 'on'
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.vacuum_stato
            state: 'return_to_base'
          - condition: state
            entity_id: sensor.vacuum_stato
            state: 'cleaning'
    action:
      - service: homeassistant.turn_off
        entity_id: automation.pulizie_automatiche_gatti

  - alias: Priorità pulizia automatica Giovedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_giovedi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: time
        weekday:
          - thu
      - condition: state
        entity_id: input_boolean.pulizia_giovedi
        state: 'on'
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.vacuum_stato
            state: 'return_to_base'
          - condition: state
            entity_id: sensor.vacuum_stato
            state: 'cleaning'
    action:
      - service: homeassistant.turn_off
        entity_id: automation.pulizie_automatiche_gatti

  - alias: Priorità pulizia automatica Venerdi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_venerdi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: time
        weekday:
          - fri
      - condition: state
        entity_id: input_boolean.pulizia_venerdi
        state: 'on'
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.vacuum_stato
            state: 'return_to_base'
          - condition: state
            entity_id: sensor.vacuum_stato
            state: 'cleaning'
    action:
      - service: homeassistant.turn_off
        entity_id: automation.pulizie_automatiche_gatti

  - alias: Priorità pulizia automatica Sabato
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_sabato.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: time
        weekday:
          - sat
      - condition: state
        entity_id: input_boolean.pulizia_sabato
        state: 'on'
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.vacuum_stato
            state: 'return_to_base'
          - condition: state
            entity_id: sensor.vacuum_stato
            state: 'cleaning'
    action:
      - service: homeassistant.turn_off
        entity_id: automation.pulizie_automatiche_gatti

  - alias: Priorità pulizia automatica Domenica
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_domenica.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: time
        weekday:
          - sun
      - condition: state
        entity_id: input_boolean.pulizia_domenica
        state: 'on'
      - condition: or
        conditions:
          - condition: state
            entity_id: sensor.vacuum_stato
            state: 'return_to_base'
          - condition: state
            entity_id: sensor.vacuum_stato
            state: 'cleaning'
    action:
      - service: homeassistant.turn_off
        entity_id: automation.pulizie_automatiche_gatti

###################################################
##                  Pulizie automatiche
###################################################
  - alias: Pulizie automatiche lunedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_lunedi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: time
        weekday:
          - mon
      - condition: state
        entity_id: input_boolean.pulizia_lunedi
        state: 'on'
    action:
      - service: script.robot_avvia_pulizie
      - service: homeassistant.turn_on
        entity_id: input_boolean.annuncio_pulizie

  - alias: Pulizie automatiche martedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_martedi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: time
        weekday:
          - tue
      - condition: state
        entity_id: input_boolean.pulizia_martedi
        state: 'on'
    action:
      - service: script.robot_avvia_pulizie
      - service: homeassistant.turn_on
        entity_id: input_boolean.annuncio_pulizie

  - alias: Pulizie automatiche mercoledi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_mercoledi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: time
        weekday:
          - wed
      - condition: state
        entity_id: input_boolean.pulizia_mercoledi
        state: 'on'
    action:
      - service: script.robot_avvia_pulizie
      - service: homeassistant.turn_on
        entity_id: input_boolean.annuncio_pulizie

  - alias: Pulizie automatiche giovedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_giovedi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: time
        weekday:
          - thu
      - condition: state
        entity_id: input_boolean.pulizia_giovedi
        state: 'on'
    action:
      - service: script.robot_avvia_pulizie
      - service: homeassistant.turn_on
        entity_id: input_boolean.annuncio_pulizie

  - alias: Pulizie automatiche venerdi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_venerdi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: time
        weekday:
          - fri
      - condition: state
        entity_id: input_boolean.pulizia_venerdi
        state: 'on'
    action:
      - service: script.robot_avvia_pulizie
      - service: homeassistant.turn_on
        entity_id: input_boolean.annuncio_pulizie

  - alias: Pulizie automatiche sabato
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_sabato.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: time
        weekday:
          - sat
      - condition: state
        entity_id: input_boolean.pulizia_sabato
        state: 'on'
    action:
      - service: script.robot_avvia_pulizie
      - service: homeassistant.turn_on
        entity_id: input_boolean.annuncio_pulizie

  - alias: Pulizie automatiche domenica
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_domenica.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: time
        weekday:
          - sun
      - condition: state
        entity_id: input_boolean.pulizia_domenica
        state: 'on'
    action:
      - service: script.robot_avvia_pulizie
      - service: homeassistant.turn_on
        entity_id: input_boolean.annuncio_pulizie

###################################################
##                  Pulizie con ALEXA
###################################################
  - alias: Pulizie Alexa
    trigger:
      - platform: state
        entity_id: input_boolean.pulizie_alexa
        to: 'on'
    action:
      - service_template: >
          {% if states.input_boolean.vacuum_svuota_serbatoio.state == "on" %}
            script.alexa_actions_controllo_serbatoio
          {% elif states.input_boolean.vacuum_svuota_serbatoio.state == "off" %}
            script.vacuum_start
          {% endif %}
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.pulizie_alexa

###################################################
##                  Actionable Notificaiton ALEXA
###################################################
  - alias: avvia pulizie a serbatoio pieno actionable notificaiton
    trigger:
      platform: event
      event_type: alexa_actionable_notification
      event_data:
        event_id: actionable_notification_serbatoio
        event_response: ResponseYes
    action:
      - service: script.turn_on
        entity_id: script.vacuum_start

  - alias: richiesta pulizie actionable notificaiton
    trigger:
      platform: event
      event_type: alexa_actionable_notification
      event_data:
        event_id: actionable_notification_richiesta_pulizie
        event_response: ResponseYes
    action:
      - service: script.turn_on
        entity_id: script.vacuum_start
###################################################
##                  Controllo serbatoio
###################################################
  - alias: Controllo serbatoio lunedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_lunedi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'on'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: time
        weekday:
          - mon
      - condition: state
        entity_id: input_boolean.pulizia_lunedi
        state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Oggi non posso fare le pulizie, il serbatoio è pieno!

  - alias: Controllo serbatoio martedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_martedi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'on'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: time
        weekday:
          - tue
      - condition: state
        entity_id: input_boolean.pulizia_martedi
        state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Oggi non posso fare le pulizie, il serbatoio è pieno!

  - alias: Controllo serbatoio mercoledi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_mercoledi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'on'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: time
        weekday:
          - wed
      - condition: state
        entity_id: input_boolean.pulizia_mercoledi
        state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Oggi non posso fare le pulizie, il serbatoio è pieno!

  - alias: Controllo serbatoio giovedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_giovedi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'on'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: time
        weekday:
          - thu
      - condition: state
        entity_id: input_boolean.pulizia_giovedi
        state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Oggi non posso fare le pulizie, il serbatoio è pieno!

  - alias: Controllo serbatoio venerdi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_venerdi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'on'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: time
        weekday:
          - fri
      - condition: state
        entity_id: input_boolean.pulizia_venerdi
        state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Oggi non posso fare le pulizie, il serbatoio è pieno!

  - alias: Controllo serbatoio sabato
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_sabato.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'on'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: time
        weekday:
          - sat
      - condition: state
        entity_id: input_boolean.pulizia_sabato
        state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Oggi non posso fare le pulizie, il serbatoio è pieno!

  - alias: Controllo serbatoio domenica
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_pulizia_domenica.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'on'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
      - condition: time
        weekday:
          - sun
      - condition: state
        entity_id: input_boolean.pulizia_domenica
        state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Oggi non posso fare le pulizie, il serbatoio è pieno!

###################################################
##                  Svuota serbatoio con sensore
###################################################
  - alias: Svuota serbatoio con sensore
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: sensor.sensore_serbatorio_vacuum
        below: 5
        for:
          seconds: 5
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.vacuum_svuota_serbatoio

###################################################
##                  NOTIFICHE
###################################################

  - alias: Avviso serbatoio pieno prima di pulizia lunedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.sensor.vacuum_controllo_giornaliero_serbatoio_lunedi.state | int | timestamp_custom('%H:%M', False)) }}"
    condition:
        - condition: time
          weekday:
            - mon
        - condition: state
          entity_id: input_boolean.pulizia_lunedi
          state: 'on'
        - condition: state
          entity_id: input_boolean.vacuum_svuota_serbatoio
          state: 'on'
        - condition: state
          entity_id: input_boolean.pulizia_giornaliera_robot
          state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Tra un ora dovrò pulire, ti ricordo che devi svuotare il serbatorio, altrimenti non potrò farlo.

  - alias: Avviso serbatoio pieno prima di pulizia martedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.sensor.vacuum_controllo_giornaliero_serbatoio_martedi.state | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: time
        weekday:
          - tue
      - condition: state
        entity_id: input_boolean.pulizia_martedi
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'on'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Tra un ora dovrò pulire, ti ricordo che devi svuotare il serbatorio, altrimenti non potrò farlo.

  - alias: Avviso serbatoio pieno prima di pulizia mercoledi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.sensor.vacuum_controllo_giornaliero_serbatoio_mercoledi.state | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: time
        weekday:
          - wed
      - condition: state
        entity_id: input_boolean.pulizia_mercoledi
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'on'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Tra un ora dovrò pulire, ti ricordo che devi svuotare il serbatorio, altrimenti non potrò farlo.

  - alias: Avviso serbatoio pieno prima di pulizia giovedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.sensor.vacuum_controllo_giornaliero_serbatoio_giovedi.state | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: time
        weekday:
          - thu
      - condition: state
        entity_id: input_boolean.pulizia_giovedi
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'on'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Tra un ora dovrò pulire, ti ricordo che devi svuotare il serbatorio, altrimenti non potrò farlo.

  - alias: Avviso serbatoio pieno prima di pulizia venerdi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.sensor.vacuum_controllo_giornaliero_serbatoio_venerdi.state | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: time
        weekday:
          - fri
      - condition: state
        entity_id: input_boolean.pulizia_venerdi
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'on'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Tra un ora dovrò pulire, ti ricordo che devi svuotare il serbatorio, altrimenti non potrò farlo.

  - alias: Avviso serbatoio pieno prima di pulizia sabato
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.sensor.vacuum_controllo_giornaliero_serbatoio_sabato.state | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: time
        weekday:
          - sat
      - condition: state
        entity_id: input_boolean.pulizia_sabato
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'on'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Tra un ora dovrò pulire, ti ricordo che devi svuotare il serbatorio, altrimenti non potrò farlo.

  - alias: Avviso serbatoio pieno prima di pulizia domenica
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.sensor.vacuum_controllo_giornaliero_serbatoio_domenica.state | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: time
        weekday:
          - sun
      - condition: state
        entity_id: input_boolean.pulizia_domenica
        state: 'on'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'on'
      - condition: state
        entity_id: input_boolean.pulizia_giornaliera_robot
        state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Tra un ora dovrò pulire, ti ricordo che devi svuotare il serbatorio, altrimenti non potrò farlo.


  - alias: Notifica inizio pulizie
    initial_state: true
    trigger:
      platform: state
      entity_id: vacuum.xiaomi_vacuum_cleaner
      from: 'docked'
      to: 'cleaning'
      for:
        seconds: 5
    condition:
      - condition: state
        entity_id: input_boolean.annuncio_inizio_pulizie
        state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Pulizia casa avviata
      - service: notify.alexa_media
        data:
          target:
            - media_player.XXXXXXX
          data:
            type: announce
            method: speak
          message: "Sono le {{ states.sensor.time.state }}, inizio a pulire casa "

  - alias: Notifica fine pulizie
    initial_state: true
    trigger:
      platform: state
      entity_id: sensor.vacuum_stato
      from: 'Returning home'
      to: 'Charging'
    condition:
      - condition: state
        entity_id: input_boolean.vacuum_pulizie_avviate
        state: 'on'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Pulizia casa terminata, ricorda di svuotare il serbatoio
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.vacuum_svuota_serbatoio

      - service: homeassistant.turn_on
        entity_id: automation.pulizie_automatiche_gatti
      - service: homeassistant.turn_off
        data:
          entity_id: input_boolean.vacuum_pulizie_avviate
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.pulizia_eseguita

  - alias: Vacuum Pulizie Avviate
    initial_state: true
    trigger:
      platform: state
      entity_id: vacuum.xiaomi_vacuum_cleaner
      from: 'docked'
      to: 'cleaning'
      for:
        minutes: 5
    action:
      - service: homeassistant.turn_on
        data:
          entity_id: input_boolean.vacuum_pulizie_avviate

      - service: homeassistant.turn_off
        entity_id: automation.pulizie_automatiche_gatti

  - alias: Notifica base scollegata
    initial_state: true
    trigger:
      platform: state
      entity_id: sensor.vacuum_stato
      to: 'unknown'
      for:
        minutes: 10
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby*'
          message: Sembra che la base non sia più collegata alla corrente.
      - service: notify.alexa_media
        data:
          target:
            - media_player.XXXXXXX
          data:
            type: announce
            method: speak
          message: "Sembra che la base di Dobby non sia più collegata alla corrente "


  - alias: Avviso Ricambi Spazzola Robot
    initial_state: true
    trigger:
      platform: template
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.main_brush_left | int < 20 }}'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby - Ricambi*'
          message: "Livello di usra della spazzola principale: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.main_brush_left }}/300."

  - alias: Avviso Spazzola Robot da Sostituire
    initial_state: true
    trigger:
      platform: template
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.main_brush_left | int < 3 }}'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby - Spazzola da sostituire*'
          message: "Livello di usra della spazzola principale: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.main_brush_left }}/300. Prevedi la sostituzione!"

  - alias: Avviso Ricambi Spazzolina Robot
    initial_state: true
    trigger:
      platform: template
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.side_brush_left | int < 60 }}'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby - Ricambi*'
          message: "Livello di usra della spazzolina: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.side_brush_left }}/200."

  - alias: Avviso Spazzolina Robot da Sostituire
    initial_state: true
    trigger:
      platform: template
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.side_brush_left | int < 10 }}'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby - Spazzola da sostituire*'
          message: "Livello di usra della spazzolina: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.side_brush_left }}/200. Prevedi la sostituzione"

  - alias: Avviso Ricambi filtro Robot
    initial_state: true
    trigger:
      platform: template
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.filter_left | int < 40 }}'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby - Ricambi*'
          message: "Livello di usra del filtro: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.filter_left }}/150."

  - alias: Avviso filtro Robot da Sostituire
    initial_state: true
    trigger:
      platform: template
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.filter_left | int < 7 }}'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby - filtro da sostituire*'
          message: "Livello di usra del filtro: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.filter_left }}/150. Prevedi la sostituzione!"

  - id: notifica_pulizia_sensori_robot_cnt
    alias: Avviso pulizia sensori Robot
    initial_state: true
    trigger:
      platform: template
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.sensor_dirty_left | int < 2 }}'
    action:
      - service: notify.XXXXXX
        data:
          title: '*Dobby - Sensori Sporchi*'
          message: "Livello di sporco sensori: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.sensor_dirty_left }}/30. Eseguire una pulizia!"

  - id: avviso_robot_in_errore_cnv
    alias: Avviso Robot in errore
    initial_state: true
    trigger:
      - platform: state
        entity_id: vacuum.xiaomi_vacuum_cleaner
        to: "error"
        for: "00:05:00"
    action:
      - service: notify.alexa_media
        data:
          target:
            - media_player.XXXXXXX
          data:
            type: announce
            method: speak
          message: "Attenzione. Probabilmente Dobby ha un problema. Qualcuno può controllare? Grazie."
###################################################
##                  RICHIESTA PULIZIE
###################################################
  - alias: Richiesta 1 pulizie lunedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_richiesta_pulizia_lunedi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: group.famiglia
        state: 'home'
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: state
        entity_id: input_boolean.pulizia_eseguita
        state: 'off'
      - condition: time
        weekday:
          - mon
      - condition: state
        entity_id: input_boolean.richiesta_pulizia
        state: 'on'
      - condition: state
        entity_id: input_boolean.richiesta_pulizia_lunedi
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.notifica_richiesta_pulizia

  - alias: Richiesta 2 pulizie lunedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_richiesta_pulizia_lunedi_2.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: group.famiglia
        state: 'home'
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: state
        entity_id: input_boolean.pulizia_eseguita
        state: 'off'
      - condition: time
        weekday:
          - mon
      - condition: state
        entity_id: input_boolean.richiesta_pulizia
        state: 'on'
      - condition: state
        entity_id: input_boolean.richiesta_pulizia_lunedi_2
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.notifica_richiesta_pulizia

  - alias: Richiesta 1 pulizie martedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_richiesta_pulizia_martedi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: group.famiglia
        state: 'home'
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: state
        entity_id: input_boolean.pulizia_eseguita
        state: 'off'
      - condition: time
        weekday:
          - tue
      - condition: state
        entity_id: input_boolean.richiesta_pulizia
        state: 'on'
      - condition: state
        entity_id: input_boolean.richiesta_pulizia_martedi
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.notifica_richiesta_pulizia

  - alias: Richiesta 2 pulizie martedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_richiesta_pulizia_martedi_2.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: group.famiglia
        state: 'home'
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: state
        entity_id: input_boolean.pulizia_eseguita
        state: 'off'
      - condition: time
        weekday:
          - tue
      - condition: state
        entity_id: input_boolean.richiesta_pulizia
        state: 'on'
      - condition: state
        entity_id: input_boolean.richiesta_pulizia_martedi_2
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.notifica_richiesta_pulizia

  - alias: Richiesta 1 pulizie mercoledi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_richiesta_pulizia_mercoledi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: group.famiglia
        state: 'home'
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: state
        entity_id: input_boolean.pulizia_eseguita
        state: 'off'
      - condition: state
        entity_id: input_boolean.richiesta_pulizia
        state: 'on'
      - condition: state
        entity_id: input_boolean.richiesta_pulizia_mercoledi
        state: 'on'
      - condition: time
        weekday:
          - wed
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.notifica_richiesta_pulizia

  - alias: Richiesta 2 pulizie mercoledi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_richiesta_pulizia_mercoledi_2.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: group.famiglia
        state: 'home'
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: state
        entity_id: input_boolean.pulizia_eseguita
        state: 'off'
      - condition: time
        weekday:
          - wed
      - condition: state
        entity_id: input_boolean.richiesta_pulizia
        state: 'on'
      - condition: state
        entity_id: input_boolean.richiesta_pulizia_mercoledi_2
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.notifica_richiesta_pulizia

  - alias: Richiesta 1 pulizie giovedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_richiesta_pulizia_giovedi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: group.famiglia
        state: 'home'
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: state
        entity_id: input_boolean.pulizia_eseguita
        state: 'off'
      - condition: time
        weekday:
          - thu
      - condition: state
        entity_id: input_boolean.richiesta_pulizia
        state: 'on'
      - condition: state
        entity_id: input_boolean.richiesta_pulizia_giovedi
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.notifica_richiesta_pulizia

  - alias: Richiesta 2 pulizie giovedi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_richiesta_pulizia_giovedi_2.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: group.famiglia
        state: 'home'
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: state
        entity_id: input_boolean.pulizia_eseguita
        state: 'off'
      - condition: time
        weekday:
          - thu
      - condition: state
        entity_id: input_boolean.richiesta_pulizia
        state: 'on'
      - condition: state
        entity_id: input_boolean.richiesta_pulizia_giovedi_2
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.notifica_richiesta_pulizia

  - alias: Richiesta 1 pulizie venerdi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_richiesta_pulizia_venerdi.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: group.famiglia
        state: 'home'
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: state
        entity_id: input_boolean.pulizia_eseguita
        state: 'off'
      - condition: time
        weekday:
          - fri
      - condition: state
        entity_id: input_boolean.richiesta_pulizia
        state: 'on'
      - condition: state
        entity_id: input_boolean.richiesta_pulizia_venerdi
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.notifica_richiesta_pulizia

  - alias: Richiesta 2 pulizie venerdi
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_richiesta_pulizia_venerdi_2.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: group.famiglia
        state: 'home'
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: state
        entity_id: input_boolean.pulizia_eseguita
        state: 'off'
      - condition: time
        weekday:
          - fri
      - condition: state
        entity_id: input_boolean.richiesta_pulizia
        state: 'on'
      - condition: state
        entity_id: input_boolean.richiesta_pulizia_venerdi_2
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.notifica_richiesta_pulizia

  - alias: Richiesta 1 pulizie sabato
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_richiesta_pulizia_sabato.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: group.famiglia
        state: 'home'
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: state
        entity_id: input_boolean.pulizia_eseguita
        state: 'off'
      - condition: time
        weekday:
          - sat
      - condition: state
        entity_id: input_boolean.richiesta_pulizia
        state: 'on'
      - condition: state
        entity_id: input_boolean.richiesta_pulizia_sabato
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.notifica_richiesta_pulizia

  - alias: Richiesta 2 pulizie sabato
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_richiesta_pulizia_sabato_2.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: group.famiglia
        state: 'home'
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: state
        entity_id: input_boolean.pulizia_eseguita
        state: 'off'
      - condition: time
        weekday:
          - sat
      - condition: state
        entity_id: input_boolean.richiesta_pulizia
        state: 'on'
      - condition: state
        entity_id: input_boolean.richiesta_pulizia_sabato_2
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.notifica_richiesta_pulizia

  - alias: Richiesta 1 pulizie domenica
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_richiesta_pulizia_domenica.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: group.famiglia
        state: 'home'
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: state
        entity_id: input_boolean.pulizia_eseguita
        state: 'off'
      - condition: time
        weekday:
          - sun
      - condition: state
        entity_id: input_boolean.richiesta_pulizia
        state: 'on'
      - condition: state
        entity_id: input_boolean.richiesta_pulizia_domenica
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.notifica_richiesta_pulizia

  - alias: Richiesta 2 pulizie domenica
    initial_state: true
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == (states.input_datetime.orario_richiesta_pulizia_domenica_2.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
    condition:
      - condition: state
        entity_id: group.famiglia
        state: 'home'
      - condition: state
        entity_id: sensor.vacuum_stato
        state: 'Charging'
      - condition: state
        entity_id: input_boolean.vacuum_svuota_serbatoio
        state: 'off'
      - condition: state
        entity_id: input_boolean.pulizia_eseguita
        state: 'off'
      - condition: time
        weekday:
          - sun
      - condition: state
        entity_id: input_boolean.richiesta_pulizia
        state: 'on'
      - condition: state
        entity_id: input_boolean.richiesta_pulizia_domenica_2
        state: 'on'
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.notifica_richiesta_pulizia

  - id: notifica_richiesta_pulizie_cnt
    alias: Notifica richiesta pulizie
    trigger:
      - platform: state
        entity_id: input_boolean.notifica_richiesta_pulizia
        to: 'on'
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.notifica_richiesta_pulizia

      - service: script.turn_on
        entity_id: script.alexa_actions_richiesta_pulizie

      - service: notify.mobile_app_iphone
        data:
          title: "Posso Pulire? "
          message: "Gaia sta dormendo? Vuoi che pulisca?"
          data:
               push:
                 category: "richiesta_pulizie"
                 thread-id: "pulizie"

  - alias: iOS Action pulisci - Gaia è sveglia
    initial_state: true
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: SI
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.pulizia_eseguita
      - service: homeassistant.turn_on
        entity_id: input_boolean.annuncio_pulizie
      - service: script.robot_avvia_pulizie
      - service: homeassistant.turn_on
        entity_id: input_boolean.annuncio_pulizie

  - alias: iOS Action non pulire - Gaia dorme
    initial_state: true
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: NO
    action:
      - service: notify.ios_simona
        data:
          message: "Provo dopo"


  - alias: reset richiesta pulizie
    initial_state: true
    trigger:
      platform: time
      at: '02:00:00'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.pulizia_eseguita
